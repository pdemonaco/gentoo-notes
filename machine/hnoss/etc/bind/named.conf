/*
 * Refer to the named.conf(5) and named(8) man pages, and the documentation
 * in /usr/share/doc/bind-* for more details.
 * Online versions of the documentation can be found here:
 * https://kb.isc.org/article/AA-01031
 *
 * If you are going to set up an authoritative server, make sure you
 * understand the hairy details of how DNS works. Even with simple mistakes,
 * you can break connectivity for affected parties, or cause huge amounts of
 * useless Internet traffic.
 */

acl "xfer" {
    /* Deny transfers by default except for the listed hosts.
     * If we have other name servers, place them here.
     */
    none;
};

// Management addresses for devices such as PDUs, UPSs, and Networking 
acl server_net {
    172.24.28.0/24;
};

// Management ports for switches, routers, and etc
acl network_management_net {
    172.24.64.0/24;
};

// Wired
acl client_wired_net {
    172.24.142.0/24;
};

// Wireless clients 
acl client_wireless_net {
    172.24.128.0/24;
};

// This is the network where all the shit is hanging
acl temp_net {
    192.168.64.0/24;
};

// The following ACLs differentiate slaves from masters
// "Slaves"
acl ns1 {
    172.24.142.1;
};
// "Masters"
acl ns0 {
    172.24.142.2;
};
// Groupings
acl slaves {
    ns1;
};
acl masters {
    ns0;
};

// The sum of the internal addresses
acl internal {
    client_wired_net;
    client_wireless_net;
    network_management_net;
    server_net;
    temp_net;
};

// Trusted networks
acl "trusted" {
    internal;
    localhost;
};

options {
    directory "/var/bind";
    pid-file "/run/named/named.pid";

    version "Enough with the questions - what is broccoli anyhow?";

    /* https://www.isc.org/solutions/dlv >=bind-9.7.x only */
    //bindkeys-file "/etc/bind/bind.keys";

    listen-on-v6 { ::1; };
    listen-on port 53 { localhost; ns1; };

    allow-query {
        /*
         * Accept queries from our "trusted" ACL.  We will
         * allow anyone to query our master zones below.
         * This prevents us from becoming a free DNS server
         * to the masses.
         */
        trusted;
    };

    allow-query-cache {
        /* Use the cache for the "trusted" ACL. */
        trusted;
    };

    allow-transfer {
        /* Zone tranfers are denied by default. */
        none;
    };

    allow-update {
        /* Don't allow updates, e.g. via nsupdate, from outsiders */
        none;
    };

    /*
    * If you've got a DNS server around at your upstream provider, enter its
    * IP address here, and enable the line below. This will make you benefit
    * from its cache, thus reduce overall DNS traffic in the Internet.
    *
    * Uncomment the following lines to turn on DNS forwarding, and change
    *  and/or update the forwarding ip address(es):
    */
    forward first;
    forwarders {
    //    123.123.123.123;    // Your ISP NS
    //    124.124.124.124;    // Your ISP NS
    //    4.2.2.1;        // Level3 Public DNS
    //    4.2.2.2;        // Level3 Public DNS
        8.8.8.8;        // Google Open DNS
        8.8.4.4;        // Google Open DNS
    };

    dnssec-enable yes;
    //dnssec-validation yes;

    /*
     * As of bind 9.8.0:
     * "If the root key provided has expired,
     * named will log the expiration and validation will not work."
     */
    dnssec-validation auto;

    /* if you have problems and are behind a firewall: */
    //query-source address * port 53;
};

// DNS presented to internal networks
view "internal" {
    match-clients { trusted; };
    recursion yes;

    notify-source 172.24.142.1;

    zone "demona.co" {
        type master;
        file "pri/demona.co.internal";
        allow-update{ localhost; };
        allow-transfer { any; };
    };

    zone "142.24.172.in-addr.arpa" IN {
        type master;
        file "pri/142.24.172.rev";
        allow-update { localhost; };
        allow-transfer { any; };
    };

    zone "localhost" in {
        type master;
        file "pri/localhost.internal";
        allow-update{ none; };
        notify no;
    };

    zone "127.in-addr.arpa" IN {
        type master;
        file "pri/127.rev";
        allow-update { none; };
        notify no;
    };

    zone "1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa" IN {
        type master;
        file "pri/1.rev";
        allow-update { none; };
        notify no;
    };
};

// DNS presented to external networks
view "external" {
    match-clients { any; };
    recursion no;

    minimal-responses yes;

    zone "." IN {
        type hint;
        file "named.cache";
    };

    zone "demona.co" {
        type master;
        file "pri/demona.co.external";
        allow-update { none; };
        allow-query { any; };
        allow-transfer { none; };
    };
};


// Logging set to record to /var/log
logging{
    channel local_log {
        syslog local0;
        severity debug;
        print-time yes;
        print-severity yes;
        print-category yes;
    };
    category default {
        local_log;
    };
};

include "/etc/bind/rndc.key";
controls {
    inet 127.0.0.1 port 953 allow { 127.0.0.1/32; ::1/128; } keys { "rndc-key"; };
};

/*
 * Briefly, a zone which has been declared delegation-only will be effectively
 * limited to containing NS RRs for subdomains, but no actual data beyond its
 * own apex (for example, its SOA RR and apex NS RRset). This can be used to
 * filter out "wildcard" or "synthesized" data from NAT boxes or from
 * authoritative name servers whose undelegated (in-zone) data is of no
 * interest.
 * See http://www.isc.org/software/bind/delegation-only for more info
 */

//zone "COM" { type delegation-only; };
//zone "NET" { type delegation-only; };

//zone "YOUR-DOMAIN.TLD" {
//    type master;
//    file "/var/bind/pri/YOUR-DOMAIN.TLD.zone";
//    allow-query { any; };
//    allow-transfer { xfer; };
//};

//zone "YOUR-SLAVE.TLD" {
//    type slave;
//    file "/var/bind/sec/YOUR-SLAVE.TLD.zone";
//    masters { <MASTER>; };

    /* Anybody is allowed to query but transfer should be controlled by the master. */
//    allow-query { any; };
//    allow-transfer { none; };

    /* The master should be the only one who notifies the slaves, shouldn't it? */
//    allow-notify { <MASTER>; };
//    notify no;
//};
